<Workspace Version="1.3.4.6666" X="-111.419469646175" Y="11.090607006948" zoom="0.954042924882813" ScaleFactor="1" Name="CurtainWall Horizontal References" Description="Collects references from the horizontal grid lines of the curtain wall. Also works with a linked curtain wall." ID="3d23a9eb-a9dd-4d2c-bcc6-4e1f76abfbb0" Category="GeniusLoci.Reference">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="19d4ab9e-5c7a-4662-9066-e7ecc04f2384" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="606" y="319.2" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="CurtainWall: var[]..[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="46c5c4b1-401a-48b6-9c44-5e0e0362b762" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1012.4" y="316" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="References" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="54b392b6-3294-4126-8d19-e8c0dea32ef1" type="PythonNodeModels.PythonNode" nickname="Python Script" x="850.4" y="318.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Based on a script by maciek.glowka : http://lubim.co
#By Mark Ackerley https://forum.dynamobim.com/t/dimension-horizontal-curtain-grid/35338
import clr
clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import *
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

walls = UnwrapElement(IN[0])
if not hasattr(walls, '__iter__'):
    walls = [walls]
	
for wall in walls:
	line = wall.Location.Curve
	lineDir = line.GetEndPoint(1) - line.GetEndPoint(0)
	doc=wall.Document
	
refArray = ReferenceArray()
options = Options()
options.ComputeReferences = True
options.IncludeNonVisibleObjects = True
geoElement = wall.get_Geometry(options)
#get side references
for obj in geoElement:
	if isinstance(obj,Solid):
		for f in obj.Faces:
			faceNormal = f.FaceNormal.Normalize()
			if faceNormal.IsAlmostEqualTo(XYZ(0,0,1)) or faceNormal.IsAlmostEqualTo(XYZ(0,0,-1)):
				refArray.Append(f.Reference)
    
#get grid references
for id in wall.CurtainGrid.GetUGridLineIds():
	gridLine = doc.GetElement(id)
	gridGeo = gridLine.get_Geometry(options)
	for obj in gridGeo:
		if isinstance(obj,Line):
			refArray.Append(obj.Reference)

OUT = refArray</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="19d4ab9e-5c7a-4662-9066-e7ecc04f2384" start_index="0" end="54b392b6-3294-4126-8d19-e8c0dea32ef1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="54b392b6-3294-4126-8d19-e8c0dea32ef1" start_index="0" end="46c5c4b1-401a-48b6-9c44-5e0e0362b762" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>