<Workspace Version="1.3.4.6666" X="137.118832429659" Y="200.975330952677" zoom="0.555002712934566" ScaleFactor="1" Name="PlanView To BoundingBox" Description="Create boundingBox from plan view based on the view range settings. (Z is calculed from ProjectElevation)" ID="c174f797-c6aa-41e9-9deb-1a2e4fbd632a" Category="GeniusLoci.View">
  <NamespaceResolutionMap>
    <ClassMap partialName="Revit.Elements.Views.View3D" resolvedName="Revit.Elements.Views.View3D" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Revit.Application.Document.Current" resolvedName="Revit.Application.Document" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Revit.Application.Document" resolvedName="Revit.Application.Document" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Revit.Elements.Views.FloorPlanView" resolvedName="Revit.Elements.Views.FloorPlanView" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="e0ece8d7-6c63-4141-ae0a-ceea3e411ab4" type="PythonNodeModels.PythonNode" nickname="Python Script" x="280.77709611091" y="274.428294077676" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import PlanViewPlane, XYZ, BoundingBoxXYZ

views = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]
OUT = []

for v in views:
	bbxView = v.CropBox
	viewRange = v.GetViewRange() 
	topLevel = doc.GetElement(viewRange.GetLevelId(PlanViewPlane.TopClipPlane))
	topOffset = viewRange.GetOffset(PlanViewPlane.TopClipPlane)
	
	bttmLevel = doc.GetElement(viewRange.GetLevelId(PlanViewPlane.BottomClipPlane))
	bttmOffset = viewRange.GetOffset(PlanViewPlane.BottomClipPlane)

	cutLevel = doc.GetElement(viewRange.GetLevelId(PlanViewPlane.CutPlane))
	cutOffset = viewRange.GetOffset(PlanViewPlane.CutPlane)

	if bttmLevel : newmin = XYZ(bbxView.Min.X, bbxView.Min.Y, bttmLevel.ProjectElevation + bttmOffset)
	else: newmin = XYZ(bbxView.Min.X, bbxView.Min.Y, cutLevel.ProjectElevation + bttmOffset)
	if topLevel : newmax = XYZ(bbxView.Max.X, bbxView.Max.Y, topLevel.ProjectElevation + topOffset)
	else: newmax = XYZ(bbxView.Max.X, bbxView.Max.Y, cutLevel.ProjectElevation + cutOffset)
	
	newbox = BoundingBoxXYZ()
	newbox.Max = newmax
	newbox.Min = newmin
	OUT.append(newbox.ToProtoType())</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="4d1ce899-0677-4e2e-8216-d57a5105a5aa" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-402.42290388909" y="274.428294077676" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="PlanView: var[]..[] = Revit.Application.Document.Current.ActiveView" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="76dd6aae-7f16-483b-9068-e051667fff73" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="505.17709611091" y="274.428294077676" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="BoundingBox" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="e0ece8d7-6c63-4141-ae0a-ceea3e411ab4" start_index="0" end="76dd6aae-7f16-483b-9068-e051667fff73" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4d1ce899-0677-4e2e-8216-d57a5105a5aa" start_index="0" end="e0ece8d7-6c63-4141-ae0a-ceea3e411ab4" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>