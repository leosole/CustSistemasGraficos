<Workspace Version="1.3.4.6666" X="275.058179747491" Y="112.80874943712" zoom="0.628310698447613" ScaleFactor="1" Name="AppearanceAsset Create" Description="Works only in Revit 2018.1 and later.&#xD;&#xA;Create an AppearanceAsset by duplicating an existing rendering asset.&#xD;&#xA;Please note : The asset will be duplicated with all its properties (category, color, image...)&#xD;&#xA;For use with the AppearanceAsset Schema node." ID="49177a1b-8b95-422f-9e8c-aedd0e9c2acd" Category="GeniusLoci.Material">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="60454f38-7ea9-4c4d-9a4d-5a61a4f9b914" type="PythonNodeModels.PythonNode" nickname="Python Script" x="92.9199260360434" y="252.197615179984" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#Alban de Chasteigner 2019
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com

import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Visual import *
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument
# Import ToDSType  (bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
from Revit.Elements import *

def tolist(obj):
    if hasattr(obj, '__iter__'): return obj
    else: return [obj]
    
names = tolist(IN[0])
schema = tolist(IN[1])[0]
assets=[]

systemAppearanceAssets = doc.Application.GetAssets(AssetType.Appearance)
for asset in systemAppearanceAssets :
	for newName in names :
		if (asset.FindByName("BaseSchema")).Value == schema:
			TransactionManager.Instance.EnsureInTransaction(doc)
			create=AppearanceAssetElement.Create(doc,newName,asset)
			assets.append(create.ToDSType(False))
			TransactionManager.Instance.TransactionTaskDone()
	
OUT = assets</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9c2c484f-81d8-4388-bd2c-576ac582c9b7" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-334.680073963957" y="218.410948513318" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Name" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="a1ec2970-e14c-4c37-82e4-cc4ac94c8bfa" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="966.919926036044" y="234.624281846651" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="AppearanceAsset" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="22165117-0529-4fd3-adb4-2350fe8ab55e" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-334.680073963957" y="303.197615179984" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Titled &quot;Type&quot; in the Asset Browser&#xD;&#xA;schema:string=&quot;GenericSchema&quot;" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="a3c7f844-4175-4ef6-a00b-35491e893a3a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="742.519926036043" y="234.624281846651" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Alban de Chasteigner 2019
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com

import clr
clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

def tolist(obj):
    if hasattr(obj, '__iter__'): return obj
    else: return [obj]
    
names = tolist(IN[0])
appareance=[]

appearanceAssets = FilteredElementCollector(doc).OfClass(AppearanceAssetElement).ToElements()

for appearanceAsset in appearanceAssets :
	for name in names:
		if appearanceAsset.Name == name:
			appareance.append(appearanceAsset)

if isinstance(IN[0], list): OUT = appareance
else: OUT = appareance[0]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="54224979-957f-4b71-a838-a69e138a9951" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="317.319926036043" y="238.837615179984" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{passthrough,waitfor}[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="60454f38-7ea9-4c4d-9a4d-5a61a4f9b914" start_index="0" end="54224979-957f-4b71-a838-a69e138a9951" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9c2c484f-81d8-4388-bd2c-576ac582c9b7" start_index="0" end="60454f38-7ea9-4c4d-9a4d-5a61a4f9b914" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9c2c484f-81d8-4388-bd2c-576ac582c9b7" start_index="0" end="54224979-957f-4b71-a838-a69e138a9951" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="22165117-0529-4fd3-adb4-2350fe8ab55e" start_index="0" end="60454f38-7ea9-4c4d-9a4d-5a61a4f9b914" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a3c7f844-4175-4ef6-a00b-35491e893a3a" start_index="0" end="a1ec2970-e14c-4c37-82e4-cc4ac94c8bfa" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="54224979-957f-4b71-a838-a69e138a9951" start_index="0" end="a3c7f844-4175-4ef6-a00b-35491e893a3a" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>