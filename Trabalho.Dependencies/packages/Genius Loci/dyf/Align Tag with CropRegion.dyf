<Workspace Version="1.3.4.6666" X="128.04485645809" Y="89.1804636520122" zoom="0.784369328044827" ScaleFactor="1" Name="Align Tag with CropRegion" Description="Aligns the tags with the Crop Region's boundaries of the view.&#xD;&#xA;By Cyril Poupin on Dynamo Forum" ID="89c45513-1d74-48af-9e27-836eb30bda18" Category="GeniusLoci.Tag">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="59676f7a-520d-4c56-9874-597666d09c59" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="81.6" y="264.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Tag Category&#xD;&#xA;category" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="5e918793-bf2c-4af2-9aa0-18c7164887fb" type="PythonNodeModels.PythonNode" nickname="Python Script" x="267.6" y="273.2" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#By Cyril Poupin on Dynamo Forum
#https://forum.dynamobim.com/t/room-tags-should-be-outside-the-crop-region/57507/5

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
import Autodesk.DesignScript.Geometry as DS

clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

def moveTgtoCrop(boundLines, rtag):
	if isinstance(rtag,SpatialElementTag):
		ptTag = rtag.Location.Point
	elif isinstance(rtag,IndependentTag):
		ptTag = rtag.TagHeadPosition
	lstInter = []
	for lineBound in boundLines:
		interResult = lineBound.Project(ptTag)
		lstInter.append(interResult)
	lstInter.sort(key = lambda x : ptTag.DistanceTo(x.XYZPoint))
	firsttInterResult = lstInter[0]
	rtag.TagHeadPosition = firsttInterResult.XYZPoint
	#move location to update TagHeadPosition
	rtag.Location.Move(XYZ(0.001,0.001,0))

def getBoundLines(bbx, Zvalue, offsetCrop = 1):
	lstPt = []
	lstLine = []
	lstPt.append(XYZ(bbx.Min.X, bbx.Min.Y, Zvalue))
	lstPt.append(XYZ(bbx.Max.X, bbx.Min.Y, Zvalue))
	lstPt.append(XYZ(bbx.Max.X, bbx.Max.Y, Zvalue))
	lstPt.append(XYZ(bbx.Min.X, bbx.Max.Y, Zvalue))
	for idx, pt in enumerate(lstPt):
		if idx == 0:
			lstLine.append(Line.CreateBound(lstPt[- 1], pt))
		else:	
			lstLine.append(Line.CreateBound(lstPt[idx - 1], pt))		
	polycuDS = DS.PolyCurve.ByJoinedCurves([x.ToProtoType()  for x in lstLine])	
	polycuDS = polycuDS.Offset(offsetCrop)
	rvtLines = [x.ToRevitType() for x in polycuDS.Explode()]
	return rvtLines		

category=UnwrapElement(IN[0])
offsetCrop = IN[1]
activView = doc.ActiveView
cropBox = activView.CropBox 
viewRange = activView.GetViewRange()
cutOffset = viewRange.GetOffset(PlanViewPlane.CutPlane)

fecRoomTg = FilteredElementCollector(doc, activView.Id).OfCategoryId(category.Id).ToElements()
	
boundLines = getBoundLines(cropBox, cutOffset, offsetCrop)
TransactionManager.Instance.EnsureInTransaction(doc)
for rtag in fecRoomTg:
	rtag.HasLeader = True
	moveTgtoCrop(boundLines, rtag)
TransactionManager.Instance.TransactionTaskDone()

OUT = fecRoomTg</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="40dbd749-6936-46ab-9f96-176d9944de86" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-87.6000000000001" y="344" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Distance offset from Crop Region&#xD;&#xA;offset" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="45f52356-5ef7-4ee1-bcc3-c508dbf6c415" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="464.4" y="273.6" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Tag" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="59676f7a-520d-4c56-9874-597666d09c59" start_index="0" end="5e918793-bf2c-4af2-9aa0-18c7164887fb" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5e918793-bf2c-4af2-9aa0-18c7164887fb" start_index="0" end="45f52356-5ef7-4ee1-bcc3-c508dbf6c415" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="40dbd749-6936-46ab-9f96-176d9944de86" start_index="0" end="5e918793-bf2c-4af2-9aa0-18c7164887fb" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>