<Workspace Version="1.3.4.6666" X="-64.1519824435898" Y="19.3127473880753" zoom="0.784369328044827" ScaleFactor="1" Name="Get DependentElements" Description="Returns all elements which are children of this Element and that will be deleted with it." ID="baf0d037-55cd-44c3-a20a-92dfba3725d0" Category="GeniusLoci.Element">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="3a4c743b-d129-4335-bbb4-db986837c95f" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="282.4" y="300.625282339921" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="6fb51edf-1f8f-4f70-af21-da453d215138" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="614.708512904294" y="298.559861391744" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="DependentElements" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="5acddbd3-aeee-4340-a398-0c4ce08b7a0b" type="PythonNodeModels.PythonNode" nickname="Python Script" x="426.523539972575" y="299.714999307685" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

doc = DocumentManager.Instance.CurrentDBDocument

if isinstance(IN[0], list) : elements = UnwrapElement(IN[0])
else : elements = [UnwrapElement(IN[0])]

depElems=[]
for elem in elements :
	depElem=[]
	dependentIds = elem.GetDependentElements(None)
	for id in dependentIds :
		depElem.append(doc.GetElement(id))
	depElems.append(depElem)
	
if isinstance(IN[0], list): OUT = depElems
else: OUT = depElems[0]</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="3a4c743b-d129-4335-bbb4-db986837c95f" start_index="0" end="5acddbd3-aeee-4340-a398-0c4ce08b7a0b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5acddbd3-aeee-4340-a398-0c4ce08b7a0b" start_index="0" end="6fb51edf-1f8f-4f70-af21-da453d215138" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>