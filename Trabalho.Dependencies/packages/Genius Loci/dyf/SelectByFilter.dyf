<Workspace Version="1.3.4.6666" X="41.2073402626836" Y="23.7388015099964" zoom="0.822695359375" ScaleFactor="1" Name="SelectByFilter" Description="Retrieves elements by the name of the selection set or rule-based filter." ID="dc23cdc2-23b8-48f9-86ad-577589b22f37" Category="GeniusLoci.Select">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="84c2ee73-5a91-4ffa-83f3-a24140cef9e3" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="25.6000000000001" y="236.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="FilterName : string" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="d3db7065-3a6b-43e9-a9a6-418b7ea73db1" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="463.875865897581" y="235.186212256614" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Element" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="f98646b2-006d-4bdb-bfc1-1e7ce8be11c2" type="PythonNodeModels.PythonNode" nickname="Python Script" x="282.4" y="235.2" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Inspired by Christian Gartland
import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import FilteredElementCollector, ParameterFilterElement, SelectionFilterElement
clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager

doc = DocumentManager.Instance.CurrentDBDocument
name = IN[0]

elements, user_selection = [], []
# Get all ParameterFilterElements in doc
filter_elements = FilteredElementCollector(doc).OfClass(ParameterFilterElement)
filter_names = [f.Name for f in filter_elements]
filters = [f.GetElementFilter() for f in filter_elements]
filter_dict = dict(zip(filter_names, filters))

if name in filter_dict:
	filter = filter_dict[name]
	elements = FilteredElementCollector(doc).WhereElementIsNotElementType().WherePasses(filter).ToElements()

selection_sets = FilteredElementCollector(doc).OfClass(SelectionFilterElement)

for s in selection_sets:
	if s.Name == name:
		ids = s.GetElementIds()
		elements = [doc.GetElement(e) for e in ids]
		
OUT = elements</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="84c2ee73-5a91-4ffa-83f3-a24140cef9e3" start_index="0" end="f98646b2-006d-4bdb-bfc1-1e7ce8be11c2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f98646b2-006d-4bdb-bfc1-1e7ce8be11c2" start_index="0" end="d3db7065-3a6b-43e9-a9a6-418b7ea73db1" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>